plugins {
    id 'com.android.application'
    id 'jacoco'
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn('testDebugUnitTest', 'createDebugCoverageReport')

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))

}

android {
    namespace 'ismaApp.tortosa.fieldraffle'
    compileSdk 33

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "ismaApp.tortosa.fieldraffle"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-wearable:18.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.wear:wear:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    unitTests.returnDefaultValues = true
}

sonar {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacoco.reportsDirectory}/jacoco.xml"
    }
}

